{"version":3,"sources":["components/TextFieldCustom.jsx","components/SearchForm.jsx","components/CommentsForm.jsx","components/IssueAvatar.jsx","components/RowIssues.jsx","components/TableSised.jsx","pages/IssuesPages.jsx","components/IssueDescriptionHeader.jsx","components/IssueDescritpionPaper.jsx","pages/IssueDetailPage.jsx","App.js","serviceWorker.js","index.js"],"names":["TextFieldCustom","state","text","handleChange","event","console","log","_this","props","onChanges","target","value","_this$props","this","classes","title","react_default","a","createElement","className","container","noValidate","autoComplete","TextField_default","id","label","textField","onChange","margin","variant","React","Component","withStyles","theme","display","flexWrap","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","button","size","SearchForm","handleClick","onClickk","IconButton_default","aria-label","onClick","Search_default","root","borderWidth","borderColor","commentNumbers","Comment_default","Typography_default","styles","avatar","greenAvatar","color","backgroundColor","green","redeAvatar","deepOrange","orangeAvatar","deepPurple","row","justifyContent","Avatar_default","avatars","flex","minWidth","status","data","withSpace","overflow","textOverflow","comments","header","info","TableRow_default","TableCell_default","padding","components_IssueAvatar","noWrap","comment","components_CommentsForm","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","disabled","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","TablePaginationActionsWrapped","flexShrink","palette","secondary","withTheme","TableSised","rows","_this2","handleChangePage","setState","handleChangeRowsPerPage","_this$state","emptyRows","min","length","Paper_default","tableWrapper","Table_default","table","TableBody_default","slice","map","components_RowIssues","key","style","height","colSpan","TableFooter_default","TablePagination_default","rowsPerPageOptions","onChangeRowsPerPage","ActionsComponent","overflowX","linkButton","textDecoration","GET_REPOSITORY","gql","_templateObject","IssuesPage","user","repo","cursor","node","body","auto","createdAt","totalCount","repository","react_apollo_browser_umd","query","fetchPolicy","variables","owner","_ref","loading","error","tab","issues","edges","creatRow","components_TableSised","repos","search","components_TextFieldCustom","handleChangeUser","bind","handleChangeRepo","choose","propTypes","PropTypes","object","isRequired","flexDirection","alignItems","maxWidth","paddingLeft","paddingRight","paddingBottom","components_IssueDescriptionHeader","SimpleSelect","_this$props$location$","location","components_IssueDescritpionPaper","App","BrowserRouter","Switch","Route","default","path","exact","component","IssuesPages","IssueDetailPage","Boolean","window","hostname","match","httpLink","createHttpLink","uri","headers","authorization","concat","process","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3fe92fbe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    size: 'auto',\r\n  },\r\n});\r\n\r\nclass TextFieldCustom extends React.Component {\r\n  state = {\r\n    text: \"\",\r\n  };\r\n\r\n  handleChange = () => event => {\r\n    //if(this.props.handleChange !== null)\r\n      //this.props.handleChanges(event.target.value);\r\n      console.log(this.props);\r\n      this.props.onChanges(event.target.value);\r\n      console.log(this.props);\r\n      //handleChanges(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { classes, title} = this.props;\r\n\r\n    return (\r\n      <div className={classes.container} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          id={title + \"outlined-name\"}\r\n          label={title}\r\n          className={classes.textField}\r\n          value={this.state.title}\r\n          onChange={this.handleChange()}\r\n          \r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTextFieldCustom.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TextFieldCustom);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    size: 'auto',\r\n  },\r\n});\r\n\r\nclass SearchForm extends React.Component {\r\n  state = {\r\n    text: \"\",\r\n  };\r\n\r\n  handleClick= () => {\r\n      this.props.onClickk();\r\n  }\r\n\r\n  render() {\r\n    const { classes, onClickk } = this.props;\r\n\r\n    \r\n\r\n    return (\r\n      \r\n        <IconButton className={classes.button} aria-label=\"Delete\" onClick={this.handleClick}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SearchForm);\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    borderWidth: 0.5,\r\n    borderColor: '#d6d7da',\r\n    },\r\n  };\r\n\r\n\r\nfunction CommentsForm(props) {\r\n  const {classes, commentNumbers} = props;\r\n  \r\n  return(\r\n    <div className={classes.root}>\r\n      <CommentIcon />\r\n      <Typography>{commentNumbers}</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(CommentsForm);\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport green from '@material-ui/core/colors/green';\r\nimport deepOrange from '@material-ui/core/colors/deepOrange';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\n\r\nconst styles = {\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n  greenAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  redeAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  orangeAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n  row: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n};\r\n\r\nfunction avatars(value, classes) {\r\n  switch(value){\r\n    case 'OPEN':\r\n      return (<Avatar className={classes.greenAvatar}>O</Avatar>);\r\n    case 'CLOSED':\r\n      return (<Avatar className={classes.redeAvatar}>C</Avatar>);\r\n    default:\r\n      return (<Avatar className={classes.orangeAvatar}>?</Avatar>);\r\n  }\r\n}\r\n\r\nfunction IssueAvatar(props) {\r\n  const { classes, value } = props;\r\n\r\n  const avatar = avatars(value, classes);\r\n\r\n  return (\r\n    <div className={classes.row}>\r\n      {avatar}\r\n    </div>\r\n  );\r\n}\r\n\r\nIssueAvatar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IssueAvatar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport CommentsForm from './CommentsForm';\r\nimport IssueAvatar from './IssueAvatar';\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    //display: 'flex',\r\n    flex: 1,\r\n    minWidth: 0,\r\n    },\r\n    status: {\r\n      \r\n      //borderColor: '#d6d7da',\r\n      //width: '20%',\r\n      },\r\n      data: {\r\n        withSpace: 'nowrap',\r\n        \r\n        overflow: 'hidden',\r\n        textOverflow: \"ellipsis\",\r\n       \r\n        //borderColor: '#d6d7da',\r\n        //width: '65%',\r\n      },\r\n      comments: {\r\n        //borderColor: '#d6d7da',\r\n        //width: '15%',\r\n      },\r\n  };\r\n\r\n\r\nfunction RowIssues(props) {\r\n  const { classes, status, header, info, commentNumbers, onClick} = props;\r\n  \r\n  return(\r\n    <TableRow className={classes.root} onClick={onClick}>\r\n      <TableCell padding={'dense'} className={classes.status}>\r\n        <IssueAvatar value={status} />\r\n      </TableCell>\r\n      <TableCell >\r\n        <div className={classes.data}>\r\n          <Typography variant={'h6'} padding={'dense'} >\r\n            {header}\r\n          </Typography>\r\n          <Typography variant= 'caption' noWrap={true}>\r\n            {info}\r\n          </Typography>\r\n        </div>\r\n      </TableCell>\r\n      <TableCell padding={'dense'} className={classes.comment}>\r\n        <CommentsForm commentNumbers={commentNumbers}></CommentsForm>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(RowIssues);\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\n\r\nimport RowIssues from './RowIssues';\r\n\r\n\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing.unit * 2.5,\r\n  },\r\n    \r\n});\r\n\r\nclass TablePaginationActions extends React.Component {\r\n  handleFirstPageButtonClick = event => {\r\n    this.props.onChangePage(event, 0);\r\n  };\r\n\r\n  handleBackButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  handleNextButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  handleLastPageButtonClick = event => {\r\n    this.props.onChangePage(\r\n      event,\r\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, count, page, rowsPerPage, theme } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={this.handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"First Page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={this.handleBackButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"Previous Page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={this.handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"Next Page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={this.handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"Last Page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\r\n  TablePaginationActions,\r\n);\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  linkButton: {\r\n    textDecoration: 'none',\r\n    color         : 'secondary',\r\n  },\r\n});\r\n\r\nclass TableSised extends React.Component {\r\n  state = {\r\n    rows: this.props.rows,\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { rows, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table}>\r\n            <TableBody>\r\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n                return (\r\n                  //<Link className={classes.linkButton} to={{ pathname: '/issues', state: { header: row.header, text: row.text} }}>\r\n                    <RowIssues\r\n                    \r\n                    key={row.id}\r\n                    status = {row.status}\r\n                    header = {row.header}\r\n                    info = {row.info}\r\n                    commentNumbers = {row.commentNumbers} \r\n                    />\r\n                  //</Link>\r\n                );\r\n              })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 48 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  colSpan={3}\r\n                  count={rows.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActionsWrapped}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nTableSised.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TableSised);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\n\r\nimport TextFieldCustom from '../components/TextFieldCustom';\r\nimport SearchForm from '../components/SearchForm';\r\nimport TableSised from '../components/TableSised';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  search: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n});\r\n\r\nconst GET_REPOSITORY = gql`\r\nquery RepoIssues($owner: String!, $repo: String!)  {\r\n  repository(owner: $owner, name: $repo) {\r\n    issues(first: 50) {\r\n      totalCount\r\n      edges {\r\n        cursor\r\n        node {\r\n          title\r\n          state\r\n          author { login avatarUrl }\r\n          body\r\n          createdAt\r\n          comments {\r\n            totalCount\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\n\r\n\r\n\r\n\r\nclass IssuesPage extends React.Component {\r\n  \r\n  state = {\r\n    user: '',\r\n    repo: '',\r\n  };\r\n\r\n  creatRow(row){\r\n    return {\r\n      key: row.cursor,\r\n      status: row.node.state,\r\n      header: row.node.title,\r\n      text: row.node.body,\r\n      info: 'from: ' + row.node.auto + ' // at: ' + row.node.createdAt,\r\n      commentNumbers: row.node.comments.totalCount,\r\n    };\r\n  }\r\n\r\n repos(user, repository) {\r\n    return (\r\n      <Query\r\n        query={GET_REPOSITORY}\r\n        fetchPolicy={\"cache-and-network\"}\r\n        variables={{ owner: user, repo: repository}}\r\n      >\r\n        {({ loading, error, data }) => {\r\n          if (loading){\r\n            return <div>Loading...</div>;\r\n          } else if(error){\r\n            return <div>Name and repo don't exist </div>;\r\n          }\r\n\r\n        \r\n          const { edges } = data.repository.issues;\r\n          const tab = edges.map(this.creatRow);\r\n          \r\n          return(\r\n            <TableSised rows={tab}/>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  };\r\n\r\n  choose(){\r\n    const { user, repo } = this.state;\r\n    if(this.state.user === \"\" || this.state.repo === \"\"){\r\n      return (<div>Choose a user and a repo</div>);\r\n    } else{\r\n      return (this.repos(user, repo));\r\n    }\r\n  };\r\n\r\n  handleChangeUser(user){\r\n    this.setState({\r\n      user: user,\r\n    });\r\n  };\r\n\r\n\r\n  handleChangeRepo(repo){\r\n    this.setState({\r\n      repo: repo,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.search}>\r\n          <TextFieldCustom title=\"User\" onChanges={this.handleChangeUser.bind(this)}></TextFieldCustom>\r\n          <TextFieldCustom title=\"Repo\" onChanges={this.handleChangeRepo.bind(this)}></TextFieldCustom>\r\n        </div>\r\n        {this.choose()}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(IssuesPage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  }\r\n});\r\n\r\n\r\nfunction IssueDescriptionHeader(props) {\r\n  const { classes, text } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant={'h5'}>\r\n        {text}\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nIssueDescriptionHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IssueDescriptionHeader);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport IssueDescriptionHeader from './IssueDescriptionHeader';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: 900,\r\n    maxWidth: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction IssueDescritpionPaper(props) {\r\n  const { classes, header, text } = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <IssueDescriptionHeader text={header}/>\r\n      <br/>\r\n      {text}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nIssueDescritpionPaper.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IssueDescritpionPaper);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport IssueDescritpionPaper from '../components/IssueDescritpionPaper';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n});\r\n\r\nclass SimpleSelect extends React.Component {\r\n  render() {\r\n    const {classes} = this.props;\r\n    const { header, text } = this.props.location.state;\r\n    \r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <IssueDescritpionPaper header={header} text={text} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SimpleSelect);\r\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport IssuesPages from './pages/IssuesPages';\nimport IssueDetailPage from './pages/IssueDetailPage';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        \n\n        <Router>\n\n                <Switch>\n                  <Route default path=\"/\" exact component={IssuesPages} />\n                  <Route\n                  path=\"/issues\" \n                  component={IssueDetailPage}\n                  />\n                </Switch>\n\n\n          </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// Appllo\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nconst httpLink = createHttpLink({\n  uri: 'https://api.github.com/graphql',\n  headers: {\n    authorization: `Bearer ${process.env.REACT_APP_GITHUB_TOKEN}`,\n  }\n})\n\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\n\nReactDOM.render( <ApolloProvider client={client}>\n  \n                      <App />\n                    \n                  </ApolloProvider>, \n document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}